generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
  user_id    String   @id @default(uuid())
  user_email String   @unique
  created    DateTime @default(now())
  fn         String
  mn         String?
  sn         String
  role_id    Int
  role       role     @relation(fields: [role_id], references: [id])
  auth       auth?
  enrol      enrol[]
  courses    courses[] @relation("hostedCourses")
  subjects   subjects[] @relation("hodSubjects")
  potential_students potential_students[] @relation("UserPotentialStudents")
}

model auth {
  user_id      String   @id
  pwd_hash     String
  pwd_salt     String
  last_updated DateTime @default(now())
  user         users    @relation(fields: [user_id], references: [user_id])
}

model role {
  id    Int     @id
  name  String  @unique
  users users[]
  /// 1 = principle, 2 = admin, 3 = hod, 4 = teacher, 5 = user
}

model courses {
  course_id     String   @id @default(uuid())
  course_name   String
  course_desc   String
  host_user_id  String
  year_level    Int
  subject_id    String?
  offering_date String?
  location      String?
  cost          Float?
  prereq        String?
  host_user     users    @relation("hostedCourses", fields: [host_user_id], references: [user_id])
  subject       subjects? @relation(fields: [subject_id], references: [subject_id])
  enrol         enrol[]
}

model subjects {
  subject_id  String   @id @default(uuid())
  name        String
  faculty     String?
  hod_user_id String
  hod_user    users    @relation("hodSubjects", fields: [hod_user_id], references: [user_id])
  courses     courses[]
}

model enrol {
  enrol_id               String   @id @default(uuid())
  user_id                String
  potential_students_id  String?
  course_id              String
  enrolled_at            DateTime @default(now())
  user                   users    @relation(fields: [user_id], references: [user_id])
  course                 courses  @relation(fields: [course_id], references: [course_id])
  potential_student      potential_students? @relation(fields: [potential_students_id], references: [id])
}

model potential_students {
  id          String   @id @default(uuid())
  email       String   @unique
  fn          String
  mn          String?
  sn          String
  created     DateTime @default(now())
  guardian_id String
  guardian    users    @relation("UserPotentialStudents", fields: [guardian_id], references: [user_id])
  enrol       enrol[]
}